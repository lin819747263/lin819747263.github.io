(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{505:function(v,_,t){"use strict";t.r(_);var a=t(2),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"性能优化的一般方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能优化的一般方法"}},[v._v("#")]),v._v(" 性能优化的一般方法")]),v._v(" "),t("p",[v._v("指标")]),v._v(" "),t("p",[v._v("并发数")]),v._v(" "),t("p",[v._v("吞吐量")]),v._v(" "),t("p",[v._v("TPS（每秒事务数）")]),v._v(" "),t("p",[v._v("QPS（每秒查询数）")]),v._v(" "),t("p",[v._v("1.性能测试，获取性能指标")]),v._v(" "),t("p",[v._v("2.分析指标，发现性能与资源瓶颈点")]),v._v(" "),t("p",[v._v("3.架构与代码分析，寻找性能与资源瓶颈关键所在")]),v._v(" "),t("p",[v._v("4.架构与代码优化，优化关键技术点，平衡资源利用")]),v._v(" "),t("p",[v._v("5.性能测试，进入性能优化闭环")]),v._v(" "),t("h3",{attrs:{id:"分层优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分层优化"}},[v._v("#")]),v._v(" 分层优化")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("机房与骨干网络性能优化")])]),v._v(" "),t("li",[t("p",[v._v("服务器与硬件的优化")]),v._v(" "),t("ul",[t("li",[v._v("选择更优的CPU/磁盘/内存/网卡")])])]),v._v(" "),t("li",[t("p",[v._v("操作系统的优化")])]),v._v(" "),t("li",[t("p",[v._v("虚拟机性能的优化")])]),v._v(" "),t("li",[t("p",[v._v("基础组件性能优化")])]),v._v(" "),t("li",[t("p",[v._v("架构优化")])]),v._v(" "),t("li",[t("h2",{attrs:{id:"软件代码性能优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#软件代码性能优化"}},[v._v("#")]),v._v(" 软件代码性能优化")])])])])}),[],!1,null,null,null);_.default=s.exports}}]);